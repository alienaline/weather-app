{"version":3,"sources":["src/scripts/view.js","src/scripts/storage.js","src/scripts/main.js"],"names":["getElem","selector","document","querySelector","VAR","WINDOWS","querySelectorAll","TABS","FORM","INPUT","CITY","TEMP","ICON","FEELS_LIKE","WEATHER","SUNRISE","SUNSET","ADD_CITY_BUTTON","ADDED_CITIES_LIST","ADDED_CITIES_TEMPLATE","FORECAST_CARDS","FORECAST_TEMPLATE","localStorage","getItem","setItem","JSON","stringify","storage","getFavoriteCities","parse","getCheckedCity","checked","setCheckedCity","cityName","favoriteCities","saveToLocalStorage","saveFavoriteCities","cities","includes","textContent","push","deleteFromLocalStorage","filter","elem","previousElementSibling","innerHTML","getWeather","serverUrl","url","apiKey","fetch","response","json","data","temp","Math","round","main","forEach","name","src","weather","icon","feels_like","getTime","sys","sunrise","sunset","console","log","getForecast","list","item","forecastCard","content","cloneNode","forecastDate","forecastTime","forecastTemp","forecastFeelsLike","forecastIcon","Date","dt","getDate","toLocaleString","month","append","addFavoriteCity","city","removeBtn","cityNotAdded","addEventListener","closest","remove","ms","hours","getHours","minutes","getMinutes","checkedCity","favoriteCity","addedCity","event","target","parentElement","value","trim","Promise"],"mappings":";;AEAA;;AACA;;;ADDA,ADAA,SAASA,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,SAAOC,QAAQ,CAACC,aAAT,CAAuBF,QAAvB,CAAP;AACH;;ACAD,ADEA,ICFI,ADEEG,CCFDkB,EDEI,GAAG,OCFK,CAACC,OAAb,CAAqB,gBAArB,CAAL,EAA6C;AACzCD,ADEAjB,ECFAiB,ADEAjB,OAAO,EAAEH,GCFG,CAACsB,IDEI,CAAClB,ECFlB,CAAqB,aDEZ,CAA0B,ECFnC,EAAuCmB,IAAI,CAACC,ADEnC,CADD,QCD+B,CAAe;AAAC,ADGvDnB,EAAAA,IAAI,EAAEL,OCH4D,CDGpD,CAACI,OCHuC,SDGhD,CAA0B,MAA1B,CAFE;ACDqE,ADI7EE,EAAAA,IAAI,EAAER,MCJiF,CDI1E,CAAC,eAAD,CAHL;ACD8C,ADKtDS,EAAAA,CCLuC,CAAvC,GDKK,EAAET,OAAO,CAAC,gBAAD,CAJN;ACAX,ADKGU,EAAAA,IAAI,EAAER,QAAQ,CAACI,gBAAT,CAA0B,oBAA1B,CALE;AAMRK,EAAAA,IAAI,EAAET,QAAQ,CAACI,gBAAT,CAA0B,eAA1B,CANE;AEDZ,ADIA,ADIIM,EAAAA,ECJEe,EDIE,EAAE3B,GCJG,GAAG,CDIC,CAAC,uBAAD,CAPL;ACIR4B,ADIAf,ECJAe,ADIAf,OEPWiC,GFOD,EAAE5C,KCLA,GDKQ,CAACI,gBAAT,CAA0B,UCJlB,WDIR,CARJ;ACKJ,ADIJQ,EAAAA,OAAO,ECJIW,ADIFzB,ICJM,CAAC6B,EDIA,CAAC,ECJN,CAAWP,YAAY,CAACC,EDInB,CATR,ICKc,CAAqB,gBAArB,CAAX,CAAP;AACH,ADIDR,EAAAA,CCPY,MDOL,EAAEf,OAAO,CAAC,kBAAD,CAVR;ACQR8B,ADGAd,ECHAc,ADGAd,MAAM,EAAEhB,MCRI,CDQG,CAAC,iBAAD,CAXP,QCQS;AACb,ADGJiB,EAAAA,SCHWU,MDGI,CCHG,CAACC,ADGF5B,OAAO,CAAC,SCHd,GAA4B+B,OAAnC,GDGoB,CAZhB;ACUP,ADGDb,EAAAA,CCVY,gBDUK,EAAElB,OAAO,CAAC,sBAAD,CAblB,oBECZ,iBAA0BiC,QAA1B;AAAA,ADWID,ADEAb,ECFAa,ADEAb,cCXY,ODWS,EAAEnB,OAAO,CAAC,SCFhBiC,QATH,EASa,ODEK,CAdtB;AECZ,ADYQ,ADEJb,EAAAA,MCFUc,QDEI,EAAElC,ICFQ,GAAG2B,ADEJ,CAAC,MCFU,CAACC,iBAAR,CDEJ,CCFnB,ADbI;AECZ,ADaQM,ADEJb,EAAAA,ECFIa,cAAc,CAACH,ADEF,EAAE/B,KCFf,EDEsB,CCFGiC,ADEF,QCFvB,YDEsB;AEf9B,ADcQN,ADfI,CAAZ,GCeQA,OAAO,CAACQ,kBAAR,CAA2BD,cAA3B;ACdR,ADeK,GAbW,YDgBD9B;AEjBL2C,ADgBNX,EAAAA,UChBMW,QDCM,CCFhB,GACsB,4BDgBG,qBCjBzB;AAEUC,ADgBF,QAAMd,IChBJc,GAFV,ODkB4B,GAAGrB,GChBZoB,IDgBmB,CAACnB,IClBvC,aDkB+B,EAAvB,CChB0BK,QAFlC,oBAEoDgB,MAFpD;AAAA,ADmBQ,QAAIf,cAAc,CAACG,MAAf,CAAsBC,QAAtB,CAA+BlC,cAAIM,IAAJ,CAAS,CAAT,EAAY6B,WAA3C,CAAJ,EAA6D;ACnBrE,ADqBQL,IAAAA,cAAc,CAACG,MAAf,CAAsBG,IAAtB,CAA2BpC,cAAIM,IAAJ,CAAS,CAAT,EAAY6B,WAAvC;ACrBR,ADsBQZ,IAAAA,OAAO,CAACQ,OClBae,KAAK,CAACF,GAAD,CAJlC,CDsBQ,CAA2Bd,cAA3B;AACH,GArBW;ACFhB,ADyBIC,EAAAA,kBAvBY,8BAuBOD,cAvBP,EAuBuB;ACrB3BiB,ADsBJ7B,IAAAA,QCtBI6B,IDsBQ,CAAC3B,GC1BrB,ID0BQ,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeQ,cAAf,CAAvC;AC1BR,AD2BK,GAzBW;ACFhB,AD6BIO,EAAAA,iBCxBqBU,KDHT,GCGiB,CAACC,IAAT,EALzB,0BD6B6B;AAAA;AC7B7B;AAKYC,ADyBJ,QAAMnB,ICzBFmB,IALZ,MD8B4B,GAAG1B,OAAO,CAACC,iBAAR,EAAvB;ACxBI0B,ADyBJpB,IAAAA,QCzBIoB,IANZ,ED+BsB,CCzBHC,ADyBIlB,ICzBA,CAACmB,CDyBhB,GAAwBtB,CCzBb,CAAWmB,IAAI,CAACI,IAAL,CAAUH,EDyBM,CAACjB,CCzB5B,CANnB,ID+BgC,CAAsBK,MAAtB,CAA6B,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAK,KAAI,CAACC,sBAAL,CAA4BC,SAAzC;ACvBzDzC,ADuByD,KAAjC,CAAxB,oBCvBIM,IAAJ,CAASgD,OAAT,CAAiB,UAAAf,IAAI;AAAA,ADwBrBhB,IAAAA,OAAO,CAACQ,SCxBiBQ,IAAI,CAACJ,IDwB9B,CAA2BL,MCxBF,GAAmBmB,IAAI,CAACM,ADwBjD,ICxBqB;AAAA,ADyBxB,aCzBG;ADNQ,CAAhB;ACOQvD,eD6BOuB,WC7BHhB,IAAJ,CAAS+C,OAAT,CAAiB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACJ,WAAL,GAAmBe,IAAI,GAAG,GAA9B;AAAA,aAArB;;AACAlD,0BAAIQ,IAAJ,CAASgD,GAAT,+CAAoDP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBC,IAApE;;AACA1D,0BAAIS,UAAJ,CAAe6C,OAAf,CAAuB,UAAAf,IAAI;AAAA,qBAAIA,IAAI,CAACJ,WAAL,GAAmBgB,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAL,CAAUM,UAArB,IAAmC,GAA1D;AAAA,aAA3B;;AACA3D,0BAAIU,OAAJ,CAAYyB,WAAZ,GAA0Bc,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBJ,IAA1C;AACArD,0BAAIW,OAAJ,CAAYwB,WAAZ,GAA0ByB,OAAO,CAACX,IAAI,CAACY,GAAL,CAASC,OAAV,CAAjC;AACA9D,0BAAIY,MAAJ,CAAWuB,WAAX,GAAyByB,OAAO,CAACX,IAAI,CAACY,GAAL,CAASE,MAAV,CAAhC;AAdR;AAAA;;AAAA;AAAA;AAAA;AAiBQC,YAAAA,OAAO,CAACC,GAAR;;AAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAqBeC;;;;;yEAAf,kBAA2BrC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUc,YAAAA,SADV,GACsB,kDADtB;AAEUC,YAAAA,GAFV,aAEmBD,SAFnB,gBAEkCd,QAFlC,oBAEoDgB,MAFpD;AAAA;AAAA;AAAA,mBAK6BC,KAAK,CAACF,GAAD,CALlC;;AAAA;AAKYG,YAAAA,QALZ;AAAA;AAAA,mBAMyBA,QAAQ,CAACC,IAAT,EANzB;;AAAA;AAMYC,YAAAA,IANZ;AASQjD,0BAAIgB,cAAJ,CAAmBmB,WAAnB,GAAiC,EAAjC;AACAc,YAAAA,IAAI,CAACkB,IAAL,CAAUb,OAAV,CAAkB,UAAAc,IAAI,EAAI;AACtB,kBAAIC,YAAY,GAAGrE,cAAIiB,iBAAJ,CAAsBqD,OAAtB,CAA8BC,SAA9B,CAAwC,IAAxC,CAAnB;;AACA,kBAAIC,YAAY,GAAGH,YAAY,CAACtE,aAAb,CAA2B,OAA3B,CAAnB;AACA,kBAAI0E,YAAY,GAAGJ,YAAY,CAACtE,aAAb,CAA2B,OAA3B,CAAnB;AACA,kBAAI2E,YAAY,GAAGL,YAAY,CAACtE,aAAb,CAA2B,eAA3B,CAAnB;AACA,kBAAI4E,iBAAiB,GAAGN,YAAY,CAACtE,aAAb,CAA2B,qBAA3B,CAAxB;AACA,kBAAI6E,YAAY,GAAGP,YAAY,CAACtE,aAAb,CAA2B,qBAA3B,CAAnB;AAEAyE,cAAAA,YAAY,CAACrC,WAAb,GAA2B,IAAI0C,IAAJ,CAAST,IAAI,CAACU,EAAL,GAAU,IAAnB,EAAyBC,OAAzB,KAAqC,GAArC,GAA2C,IAAIF,IAAJ,CAAST,IAAI,CAACU,EAAL,GAAU,IAAnB,EAAyBE,cAAzB,CAAwC,OAAxC,EAAiD;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAjD,CAAtE;AACAR,cAAAA,YAAY,CAACtC,WAAb,GAA2ByB,OAAO,CAACQ,IAAI,CAACU,EAAN,CAAlC;AACAJ,cAAAA,YAAY,CAACvC,WAAb,GAA2BgB,IAAI,CAACC,KAAL,CAAWgB,IAAI,CAACf,IAAL,CAAUH,IAArB,IAA6B,GAAxD;AACAyB,cAAAA,iBAAiB,CAACxC,WAAlB,GAAgCgB,IAAI,CAACC,KAAL,CAAWgB,IAAI,CAACf,IAAL,CAAUM,UAArB,IAAmC,GAAnE;AACAiB,cAAAA,YAAY,CAACpB,GAAb,8CAAuDY,IAAI,CAACX,OAAL,CAAa,CAAb,EAAgBC,IAAvE;;AAEA1D,4BAAIgB,cAAJ,CAAmBkE,MAAnB,CAA0Bb,YAA1B;AACH,aAfD;AAVR;AAAA;;AAAA;AAAA;AAAA;AA4BQL,YAAAA,OAAO,CAACC,GAAR;;AA5BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAiCA,SAASkB,eAAT,GAA2B;AACvB,MAAIC,IAAI,GAAGpF,cAAIe,qBAAJ,CAA0BuD,OAA1B,CAAkCC,SAAlC,CAA4C,IAA5C,CAAX;;AACA,MAAI1C,QAAQ,GAAGuD,IAAI,CAACrF,aAAL,CAAmB,aAAnB,CAAf;AACA,MAAIsF,SAAS,GAAGD,IAAI,CAAClF,gBAAL,CAAsB,SAAtB,CAAhB;AAEA,MAAIoF,YAAY,GAAG,CAACtF,cAAIc,iBAAJ,CAAsBqB,WAAtB,CAAkCD,QAAlC,CAA2ClC,cAAIM,IAAJ,CAAS,CAAT,EAAY6B,WAAvD,CAApB;;AAEA,MAAImD,YAAJ,EAAkB;AACdzD,IAAAA,QAAQ,CAACM,WAAT,GAAuBnC,cAAIM,IAAJ,CAAS,CAAT,EAAY6B,WAAnC;AACAN,IAAAA,QAAQ,CAAC0D,gBAAT,CAA0B,OAA1B,EAAmC,YAAM;AACrC7C,MAAAA,UAAU,CAACb,QAAQ,CAACM,WAAV,CAAV;AACH,KAFD;AAIAkD,IAAAA,SAAS,CAAC/B,OAAV,CAAkB,UAAAf,IAAI;AAAA,aAAIA,IAAI,CAACgD,gBAAL,CAAsB,OAAtB,EAA+B,YAAM;AAC3DhD,QAAAA,IAAI,CAACiD,OAAL,CAAa,qBAAb,EAAoCC,MAApC;AACAlE,yBAAQc,sBAAR;AACH,OAHyB,CAAJ;AAAA,KAAtB;;AAKArC,kBAAIc,iBAAJ,CAAsBoE,MAAtB,CAA6BE,IAA7B;AACH;AACJ;;AAGD,SAASxB,OAAT,CAAiB8B,EAAjB,EAAqB;AACjB,MAAIC,KAAK,GAAG,IAAId,IAAJ,CAASa,EAAE,GAAG,IAAd,EAAoBE,QAApB,EAAZ;AACA,MAAIC,OAAO,GAAG,IAAIhB,IAAJ,CAASa,EAAE,GAAG,IAAd,EAAoBI,UAApB,EAAd;AAEAH,EAAAA,KAAK,GAAIA,KAAK,IAAI,CAAV,GAAe,MAAMA,KAArB,GAA6BA,KAArC;AACAE,EAAAA,OAAO,GAAIA,OAAO,IAAI,CAAZ,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;AACA,mBAAUF,KAAV,cAAmBE,OAAnB;AACH;;AAGD,IAAMhD,MAAM,GAAG,kCAAf;;AACA,IAAMkD,WAAW,GAAGxE,iBAAQC,iBAAR,GAA4BG,OAAhD;;AAEA,IAAMG,cAAc,GAAGP,iBAAQC,iBAAR,GAA4BS,MAAnD;;2CACiBH;;;;;QAARsD;;AACL,QAAIY,YAAY,GAAGhG,cAAIe,qBAAJ,CAA0BuD,OAA1B,CAAkCC,SAAlC,CAA4C,IAA5C,CAAnB;;AACA,QAAIH,IAAI,GAAG4B,YAAY,CAAC9F,gBAAb,CAA8B,qBAA9B,CAAX;AACA,QAAI+F,SAAS,GAAGD,YAAY,CAACjG,aAAb,CAA2B,aAA3B,CAAhB;AACA,QAAIsF,SAAS,GAAGW,YAAY,CAACjG,aAAb,CAA2B,SAA3B,CAAhB;AAEAkG,IAAAA,SAAS,CAAC9D,WAAV,GAAwBiD,IAAxB;AACAa,IAAAA,SAAS,CAACV,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;AACtC7C,MAAAA,UAAU,CAACuD,SAAS,CAAC9D,WAAX,CAAV;;AACAZ,uBAAQK,cAAR,CAAuBqE,SAAS,CAAC9D,WAAjC;AACH,KAHD;AAKAkD,IAAAA,SAAS,CAACE,gBAAV,CAA2B,OAA3B,EAAoC,UAACW,KAAD,EAAW;AAC3CA,MAAAA,KAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BX,MAA3B;AACH,KAFD;AAIAJ,IAAAA,SAAS,CAACE,gBAAV,CAA2B,OAA3B,EAAoChE,iBAAQc,sBAA5C;;AACArC,kBAAIc,iBAAJ,CAAsBoE,MAAtB,CAA6Bc,YAA7B;;;AAjBJ,sDAAiC;AAAA;AAkBhC,IAGD;;;;;;;;AAEAtD,UAAU,CAACqD,WAAD,CAAV;AACA7B,WAAW,CAAC6B,WAAD,CAAX,EACA;;AAEA/F,cAAII,IAAJ,CAASmF,gBAAT,CAA0B,QAA1B,EAAoC,YAAW;AAC3C,MAAI1D,QAAQ,GAAG7B,cAAIK,KAAJ,CAAUgG,KAAV,CAAgBC,IAAhB,EAAf;;AACA,MAAIC,OAAJ,CAAY;AAAA,WAAM7D,UAAU,CAACb,QAAD,CAAhB;AAAA,GAAZ;;AACAN,mBAAQK,cAAR,CAAuBC,QAAvB;AACH,CAJD;;AAMA7B,cAAIa,eAAJ,CAAoB0E,gBAApB,CAAqC,OAArC,EAA8CJ,eAA9C;;AACAnF,cAAIa,eAAJ,CAAoB0E,gBAApB,CAAqC,OAArC,EAA8ChE,iBAAQS,kBAAtD","file":"main.a5838760.js","sourceRoot":"..","sourcesContent":["function getElem(selector) {\r\n    return document.querySelector(selector)\r\n}\r\n\r\nconst VAR = {\r\n    WINDOWS: document.querySelectorAll('.window'),\r\n    TABS: document.querySelectorAll('.tab'),\r\n    FORM: getElem('.weather_form'),\r\n    INPUT: getElem('.weather_input'),\r\n    CITY: document.querySelectorAll('.weather_city-name'),\r\n    TEMP: document.querySelectorAll('.weather_temp'),\r\n    ICON: getElem('.weather_cloudly-icon'),\r\n    FEELS_LIKE: document.querySelectorAll('.weather_feels-like'),\r\n    WEATHER: getElem('.weather_weather'),\r\n    SUNRISE: getElem('.weather_sunrise'),\r\n    SUNSET: getElem('.weather_sunset'),\r\n    ADD_CITY_BUTTON: getElem('.weather_like-button'),\r\n    ADDED_CITIES_LIST: getElem('.weather_cities-list'),\r\n    ADDED_CITIES_TEMPLATE: getElem('#weather_cities-template'),\r\n    FORECAST_CARDS: getElem('.weather_forecast-cards'),\r\n    FORECAST_TEMPLATE: getElem('.forecast_template'),\r\n}\r\n\r\nexport default VAR;","import VAR from './view.js';\r\n\r\nif (!localStorage.getItem('favoriteCities')) {\r\n    localStorage.setItem(\"favoriteCities\", JSON.stringify({'checked': 'Izhevsk', 'cities': []}));\r\n}\r\n\r\n\r\nconst storage = {\r\n    getFavoriteCities() {\r\n        return JSON.parse(localStorage.getItem(\"favoriteCities\"));\r\n    },\r\n\r\n    getCheckedCity() {\r\n        return storage.getFavoriteCities().checked;\r\n    },\r\n\r\n    setCheckedCity(cityName) {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        favoriteCities.checked = cityName;\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n\r\n    saveFavoriteCities() {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        if (favoriteCities.cities.includes(VAR.CITY[0].textContent)) return;\r\n\r\n        favoriteCities.cities.push(VAR.CITY[0].textContent);\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n\r\n    saveToLocalStorage(favoriteCities) {\r\n        localStorage.setItem('favoriteCities', JSON.stringify(favoriteCities));\r\n    },\r\n\r\n    deleteFromLocalStorage() {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        favoriteCities.cities = favoriteCities.cities.filter(elem => elem !== this.previousElementSibling.innerHTML);\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n};\r\n\r\n\r\n\r\nexport default storage;","import VAR from './view.js';\r\nimport storage from './storage.js';\r\n\r\n//implementation the functions\r\n\r\nasync function getWeather(cityName) {\r\n    const serverUrl = 'https://api.openweathermap.org/data/2.5/weather';\r\n    const url = `${serverUrl}?q=${cityName}&appid=${apiKey}&units=metric`;\r\n    try {\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        let temp = Math.round(data.main.temp);\r\n\r\n        VAR.CITY.forEach(elem => elem.textContent = data.name);\r\n        VAR.TEMP.forEach(elem => elem.textContent = temp + '°');\r\n        VAR.ICON.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@4x.png`;\r\n        VAR.FEELS_LIKE.forEach(elem => elem.textContent = Math.round(data.main.feels_like) + '°');\r\n        VAR.WEATHER.textContent = data.weather[0].main;\r\n        VAR.SUNRISE.textContent = getTime(data.sys.sunrise);\r\n        VAR.SUNSET.textContent = getTime(data.sys.sunset);\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function getForecast(cityName) {\r\n    const serverUrl = 'https://api.openweathermap.org/data/2.5/forecast';\r\n    const url = `${serverUrl}?q=${cityName}&appid=${apiKey}&units=metric`;\r\n\r\n    try {\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        \r\n\r\n        VAR.FORECAST_CARDS.textContent = '';\r\n        data.list.forEach(item => {\r\n            let forecastCard = VAR.FORECAST_TEMPLATE.content.cloneNode(true);\r\n            let forecastDate = forecastCard.querySelector('.date');\r\n            let forecastTime = forecastCard.querySelector('.time');\r\n            let forecastTemp = forecastCard.querySelector('.weather_temp');\r\n            let forecastFeelsLike = forecastCard.querySelector('.weather_feels-like');\r\n            let forecastIcon = forecastCard.querySelector('.forecast_card-icon');\r\n\r\n            forecastDate.textContent = new Date(item.dt * 1000).getDate() + ' ' + new Date(item.dt * 1000).toLocaleString('en-US', { month: 'long' });\r\n            forecastTime.textContent = getTime(item.dt);\r\n            forecastTemp.textContent = Math.round(item.main.temp) + '°';\r\n            forecastFeelsLike.textContent = Math.round(item.main.feels_like) + '°';\r\n            forecastIcon.src = `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`\r\n\r\n            VAR.FORECAST_CARDS.append(forecastCard);\r\n        })\r\n        \r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nfunction addFavoriteCity() {\r\n    let city = VAR.ADDED_CITIES_TEMPLATE.content.cloneNode(true);\r\n    let cityName = city.querySelector('.added-city');\r\n    let removeBtn = city.querySelectorAll('.remove');\r\n\r\n    let cityNotAdded = !VAR.ADDED_CITIES_LIST.textContent.includes(VAR.CITY[0].textContent);\r\n\r\n    if (cityNotAdded) {\r\n        cityName.textContent = VAR.CITY[0].textContent;\r\n        cityName.addEventListener('click', () => {\r\n            getWeather(cityName.textContent);\r\n        });\r\n\r\n        removeBtn.forEach(elem => elem.addEventListener('click', () => {\r\n            elem.closest('.cities-list_button').remove();\r\n            storage.deleteFromLocalStorage;\r\n        }));\r\n\r\n        VAR.ADDED_CITIES_LIST.append(city);\r\n    }\r\n}\r\n\r\n\r\nfunction getTime(ms) {\r\n    let hours = new Date(ms * 1000).getHours();\r\n    let minutes = new Date(ms * 1000).getMinutes();\r\n\r\n    hours = (hours <= 9) ? '0' + hours : hours;\r\n    minutes = (minutes <= 9) ? '0' + minutes : minutes;\r\n    return `${hours}:${minutes}`;\r\n}\r\n\r\n\r\nconst apiKey = 'aa29a41587e93e740b35d26547f2127f';\r\nconst checkedCity = storage.getFavoriteCities().checked;\r\n\r\nconst favoriteCities = storage.getFavoriteCities().cities;\r\nfor (let city of favoriteCities) {\r\n    let favoriteCity = VAR.ADDED_CITIES_TEMPLATE.content.cloneNode(true);\r\n    let item = favoriteCity.querySelectorAll('.cities-list_button');\r\n    let addedCity = favoriteCity.querySelector('.added-city');\r\n    let removeBtn = favoriteCity.querySelector('.remove');\r\n\r\n    addedCity.textContent = city;\r\n    addedCity.addEventListener('click', () => {\r\n        getWeather(addedCity.textContent);\r\n        storage.setCheckedCity(addedCity.textContent);\r\n    });\r\n\r\n    removeBtn.addEventListener('click', (event) => {\r\n        event.target.parentElement.remove();  \r\n    });\r\n\r\n    removeBtn.addEventListener('click', storage.deleteFromLocalStorage);\r\n    VAR.ADDED_CITIES_LIST.append(favoriteCity);\r\n}\r\n\r\n\r\n// set default city\r\n\r\ngetWeather(checkedCity);\r\ngetForecast(checkedCity);\r\n// add event listeners for send requests\r\n\r\nVAR.FORM.addEventListener('submit', function() {\r\n    let cityName = VAR.INPUT.value.trim();\r\n    new Promise(() => getWeather(cityName));\r\n    storage.setCheckedCity(cityName);\r\n});\r\n\r\nVAR.ADD_CITY_BUTTON.addEventListener('click', addFavoriteCity);\r\nVAR.ADD_CITY_BUTTON.addEventListener('click', storage.saveFavoriteCities);"]}