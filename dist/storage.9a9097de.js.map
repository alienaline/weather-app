{"version":3,"sources":["src/scripts/view.js","src/scripts/storage.js"],"names":["getElem","selector","document","querySelector","VAR","WINDOWS","querySelectorAll","TABS","FORM","INPUT","CITY","TEMP","ICON","FEELS_LIKE","WEATHER","SUNRISE","SUNSET","ADD_CITY_BUTTON","ADDED_CITIES_LIST","ADDED_CITIES_TEMPLATE","FORECAST_CARDS","FORECAST_TEMPLATE","localStorage","getItem","setItem","JSON","stringify","storage","getFavoriteCities","parse","getCheckedCity","checked","setCheckedCity","cityName","favoriteCities","saveToLocalStorage","saveFavoriteCities","cities","includes","textContent","push","deleteFromLocalStorage","filter","elem","previousElementSibling","innerHTML"],"mappings":"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","file":"storage.9a9097de.js","sourceRoot":"..","sourcesContent":["function getElem(selector) {\r\n    return document.querySelector(selector)\r\n}\r\n\r\nconst VAR = {\r\n    WINDOWS: document.querySelectorAll('.window'),\r\n    TABS: document.querySelectorAll('.tab'),\r\n    FORM: getElem('.weather_form'),\r\n    INPUT: getElem('.weather_input'),\r\n    CITY: document.querySelectorAll('.weather_city-name'),\r\n    TEMP: document.querySelectorAll('.weather_temp'),\r\n    ICON: getElem('.weather_cloudly-icon'),\r\n    FEELS_LIKE: document.querySelectorAll('.weather_feels-like'),\r\n    WEATHER: getElem('.weather_weather'),\r\n    SUNRISE: getElem('.weather_sunrise'),\r\n    SUNSET: getElem('.weather_sunset'),\r\n    ADD_CITY_BUTTON: getElem('.weather_like-button'),\r\n    ADDED_CITIES_LIST: getElem('.weather_cities-list'),\r\n    ADDED_CITIES_TEMPLATE: getElem('#weather_cities-template'),\r\n    FORECAST_CARDS: getElem('.weather_forecast-cards'),\r\n    FORECAST_TEMPLATE: getElem('.forecast_template'),\r\n}\r\n\r\nexport default VAR;","import VAR from './view.js';\r\n\r\nif (!localStorage.getItem('favoriteCities')) {\r\n    localStorage.setItem(\"favoriteCities\", JSON.stringify({'checked': 'Izhevsk', 'cities': []}));\r\n}\r\n\r\n\r\nconst storage = {\r\n    getFavoriteCities() {\r\n        return JSON.parse(localStorage.getItem(\"favoriteCities\"));\r\n    },\r\n\r\n    getCheckedCity() {\r\n        return storage.getFavoriteCities().checked;\r\n    },\r\n\r\n    setCheckedCity(cityName) {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        favoriteCities.checked = cityName;\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n\r\n    saveFavoriteCities() {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        if (favoriteCities.cities.includes(VAR.CITY[0].textContent)) return;\r\n\r\n        favoriteCities.cities.push(VAR.CITY[0].textContent);\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n\r\n    saveToLocalStorage(favoriteCities) {\r\n        localStorage.setItem('favoriteCities', JSON.stringify(favoriteCities));\r\n    },\r\n\r\n    deleteFromLocalStorage() {\r\n        const favoriteCities = storage.getFavoriteCities();\r\n        favoriteCities.cities = favoriteCities.cities.filter(elem => elem !== this.previousElementSibling.innerHTML);\r\n        storage.saveToLocalStorage(favoriteCities);\r\n    },\r\n};\r\n\r\n\r\n\r\nexport default storage;"]}